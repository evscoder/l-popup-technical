{"version":3,"sources":["src/styles/include/_variables.scss","main.css","src/styles/include/_fonts.scss","src/styles/include/_icons.scss","src/styles/include/_common.scss","src/styles/include/_typography.scss","src/styles/include/plugins/_mixins.scss","src/styles/include/_page.scss","src/components/layout/button-popup/button-popup.scss","src/components/ui/button/button.scss","src/components/layout/subscribe-popup/subscribe-popup.scss","src/styles/include/plugins/_include-media.scss","src/components/ui/checkbox/checkbox.scss","src/components/ui/forms/forms.scss","src/components/ui/input/input.scss","src/components/ui/popup-message/popup-message.scss","src/components/ui/window-popup/window-popup.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["$generate-sprites: false; // true or false\n\n$breakpoints: (\n\t'xs': 375px,\n\t'sm': 576px,\n\t'sm-tablet': 768px,\n\t'md': 992px,\n\t'lg-tablet': 1024px,\n\t'lg': 1200px,\n\t'xl': 1366px\n) !default;\n\n:root {\n    // Colors\n    --black: #202833;\n    --gray: #626263;\n    --gray-2: #A6B2BF;\n    --white: #ffffff;\n    --blue: #0C5EED;\n    --blue-2: #0842b6;\n    --red: #FD3C32;\n\n    // Colors theme\n    --primary-color: var(--blue);\n    --primary-color-active: var(--blue-2);\n    --secondary-color: var(--blue);\n    --danger-color: var(--red);\n\t--text-color: var(--black);\n\n    // Timing functions\n    --t-base: 0.2s ease-in-out;\n    --t-smooth: cubic-bezier(.215, .61, .355, 1);\n    --t-elastic: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n\n    // Fonts\n    --font-size-base: 16px;\n    --font-family-default: 'Mulish', sans-serif;\n    --font-family-secondary: 'Mulish', sans-serif;\n    --font-feature: 'pnum' on, 'lnum' on;\n\n    /* Other */\n    --container-width: 1200px;\n    --container-gutter: 15px;\n    --header-height: 57px;\n\n    @media screen and (max-width: 1199px) {\n    }\n\n    @media screen and (max-width: 767px) {\n        --font-size-base: 14px;\n    }\n\n    @media screen and (max-width: 575px) {\n    }\n}\n\n@media (prefers-color-scheme: dark), (prefers-color-scheme: light) {\n\tbody {\n    \t--text-color: var(--black);\n\t}\n}\n",":root {\n  --black: #202833;\n  --gray: #626263;\n  --gray-2: #A6B2BF;\n  --white: #ffffff;\n  --blue: #0C5EED;\n  --blue-2: #0842b6;\n  --red: #FD3C32;\n  --primary-color: var(--blue);\n  --primary-color-active: var(--blue-2);\n  --secondary-color: var(--blue);\n  --danger-color: var(--red);\n  --text-color: var(--black);\n  --t-base: 0.2s ease-in-out;\n  --t-smooth: cubic-bezier(.215, .61, .355, 1);\n  --t-elastic: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n  --font-size-base: 16px;\n  --font-family-default: \"Mulish\", sans-serif;\n  --font-family-secondary: \"Mulish\", sans-serif;\n  --font-feature: \"pnum\" on, \"lnum\" on;\n  /* Other */\n  --container-width: 1200px;\n  --container-gutter: 15px;\n  --header-height: 57px;\n}\n@media screen and (max-width: 767px) {\n  :root {\n    --font-size-base: 14px;\n  }\n}\n@media (prefers-color-scheme: dark), (prefers-color-scheme: light) {\n  body {\n    --text-color: var(--black);\n  }\n}\n@font-face {\n  font-family: \"Mulish\";\n  src: url(\"../fonts/Mulish-Bold.woff2\") format(\"woff2\"), url(\"../fonts/Mulish-Bold.woff\") format(\"woff\");\n  font-weight: bold;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"Mulish\";\n  src: url(\"../fonts/Mulish-SemiBold.woff2\") format(\"woff2\"), url(\"../fonts/Mulish-SemiBold.woff\") format(\"woff\");\n  font-weight: 600;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"Mulish\";\n  src: url(\"../fonts/Mulish-Medium.woff2\") format(\"woff2\"), url(\"../fonts/Mulish-Medium.woff\") format(\"woff\");\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap;\n}\n[class^=icon] {\n  display: inline-block;\n  vertical-align: middle;\n  line-height: 1;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n* {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: transparent;\n}\n*, *::before, *::after {\n  box-sizing: border-box;\n}\n\n@-ms-viewport {\n  width: auto;\n}\nhtml,\nbody {\n  -webkit-overflow-scrolling: touch;\n}\n\nhtml {\n  height: 100%;\n  font-size: var(--font-size-base);\n}\n\nbody {\n  display: grid;\n  grid-template-columns: 100%;\n  min-height: 100%;\n  margin: 0;\n  font: 400 1rem/1.5 var(--font-family-default);\n  font-feature-settings: var(--font-feature, normal);\n  font-variant: normal;\n  color: var(--text-color);\n  background-color: var(--white);\n  background-repeat: repeat;\n  background-position: 50% 0;\n  background-size: cover;\n  opacity: 0;\n  height: 300vh;\n}\nbody.load {\n  opacity: 1;\n  transition: opacity 0.6s ease-out 0.3s;\n}\n\na,\nbutton {\n  cursor: pointer;\n}\na:focus,\nbutton:focus {\n  outline: none;\n}\n\nbutton {\n  -webkit-appearance: none;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  box-shadow: none;\n  color: inherit;\n}\n\nimg,\nembed,\nvideo {\n  display: inline-block;\n  max-width: 100%;\n  height: auto;\n  line-height: 1;\n  border: none;\n}\n\nsvg {\n  display: inline-block;\n  line-height: 1;\n}\nsvg:not([fill=none]) {\n  fill: currentColor;\n}\n\npicture {\n  flex-grow: 1;\n  border-radius: inherit;\n}\n\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3,\nh4,\n.h4,\nh5,\n.h5 {\n  margin-top: 0;\n  font-family: var(--font-family-secondary);\n}\n\np {\n  margin-bottom: 1.5rem;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n  transition: var(--t-base);\n}\na:hover {\n  color: var(--primary-color);\n}\n\n.link-under {\n  border-bottom: 1px solid transparent;\n}\n.link-under:hover {\n  border-bottom: 1px solid;\n}\n\nsup,\nsub {\n  position: relative;\n  font-size: inherit;\n}\n\nsup {\n  top: 0;\n}\n\nsub {\n  bottom: 0;\n}\n\nb {\n  font-weight: 700;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-overflow {\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.text-nowrap {\n  white-space: nowrap;\n}\n\n.page-wrapper {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.page-content {\n  flex-grow: 1;\n}\n\n.container {\n  width: 100%;\n  max-width: var(--container-width);\n  padding: 0 var(--container-gutter);\n  margin: 0 auto;\n}\n\n.button-popup {\n  position: fixed;\n  right: 15px;\n  bottom: 15px;\n  width: 73px;\n  height: 73px;\n  background-image: linear-gradient(225deg, #0C5EED -52.44%, #292B33 94.43%);\n  border-radius: 50%;\n}\n.button-popup__img {\n  width: 68px;\n  position: absolute;\n  inset: -9px 12px 0 0;\n  animation-delay: 0s, 1s;\n  animation: taDa 2s 1s infinite;\n}\n\n@keyframes taDa {\n  0% {\n    transform: scale3d(1, 1, 1);\n  }\n  10%, 20% {\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\n  }\n  30%, 50%, 70%, 90% {\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\n  }\n  40%, 60%, 80% {\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\n  }\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n}\n.button {\n  border: none;\n  outline: none;\n  background-color: var(--primary-color);\n  color: #fff;\n  border-radius: 6px;\n  padding: 17px 40px;\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 165%;\n  text-transform: uppercase;\n  transition: all 200ms ease-in-out;\n}\n.button:active {\n  background-color: var(--primary-color-active);\n}\n\n.subscribe-popup {\n  color: #fff;\n}\n.subscribe-popup__fill {\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  z-index: 1;\n  width: 73px;\n  height: 73px;\n  border-radius: 100%;\n  background-image: linear-gradient(225deg, #0C5EED -52.44%, #292B33 94.43%);\n  pointer-events: none;\n  transform-origin: 50% 50%;\n  transform: scale(0);\n  transition: transform 0.75s ease-in-out;\n}\n.is-animate .subscribe-popup__fill {\n  transform: scale(70);\n}\n@media (min-width: 1921px) {\n  .is-animate .subscribe-popup__fill {\n    transform: scale(100);\n  }\n}\n.subscribe-popup__scene {\n  position: absolute;\n  inset: 0;\n  z-index: 2;\n  opacity: 0;\n  pointer-events: none;\n  transition: 200ms ease-in-out 0s;\n  transform: scale(1.3);\n}\n.is-animate .subscribe-popup__scene {\n  opacity: 1;\n  transition: 200ms ease-in-out 1s;\n  pointer-events: all;\n  transform: scale(1);\n}\n.subscribe-popup__parallax {\n  width: 100%;\n  height: 100%;\n}\n.subscribe-popup__parallax-item {\n  height: 100%;\n  width: 100%;\n  background: url(\"__static__content/Shapes.png\") no-repeat 50% 100%/contain;\n}\n.subscribe-popup__content {\n  position: relative;\n  z-index: 3;\n  display: grid;\n  grid-template-columns: 1fr 0.6fr;\n  gap: 48px;\n  opacity: 0;\n  pointer-events: none;\n  transition: 200ms ease-in-out 0s;\n}\n.is-animate .subscribe-popup__content {\n  opacity: 1;\n  transition: 200ms ease-in-out 0.5s;\n  pointer-events: all;\n}\n@media (max-width: 767px) {\n  .subscribe-popup__content {\n    grid-template-columns: 1fr;\n  }\n}\n.subscribe-popup__left {\n  padding-top: 20px;\n}\n.subscribe-popup__title {\n  font-size: 34px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 130%;\n}\n@media (max-width: 767px) {\n  .subscribe-popup__title {\n    margin-bottom: 16px;\n    font-size: 18px;\n  }\n}\n.subscribe-popup__text {\n  margin-bottom: 54px;\n}\n.subscribe-popup__features {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px 40px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n@media (max-width: 575px) {\n  .subscribe-popup__features {\n    grid-template-columns: 1fr;\n  }\n}\n.subscribe-popup__features-item {\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-gap: 20px 30px;\n  align-items: center;\n}\n.subscribe-popup__features-item [class*=icon] {\n  fill: none;\n}\n.subscribe-popup__features-item p {\n  margin: 0;\n}\n.subscribe-popup__submit-btn {\n  max-width: 300px;\n  width: 100%;\n}\n@media (max-width: 767px) {\n  .subscribe-popup__submit-btn {\n    max-width: 100%;\n  }\n}\n\n.checkbox {\n  display: grid;\n  grid-template-columns: auto 1fr;\n  align-items: flex-start;\n  grid-gap: 10px;\n  margin-bottom: 30px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 130%;\n}\n.checkbox input {\n  pointer-events: none;\n}\n.checkbox a {\n  color: #00ADFE;\n  text-decoration: underline;\n}\n.checkbox .input-helper {\n  display: none;\n  grid-column: 2;\n}\n.checkbox.error .input-helper {\n  display: block;\n}\n\nfieldset {\n  padding: 0;\n  margin: 0;\n  border: none;\n}\n\ninput[type=text] {\n  -webkit-appearance: none;\n}\ninput[type=search] {\n  box-sizing: border-box;\n  border-radius: 0;\n}\n\n.input {\n  -webkit-appearance: none;\n  display: block;\n  width: 100%;\n  outline: none;\n}\n.input::placeholder {\n  color: var(--gray);\n}\n\ntextarea {\n  resize: none;\n}\ntextarea.input {\n  height: auto;\n}\n\n.form-group {\n  margin-bottom: 16px;\n}\n\n.error .input-helper {\n  color: var(--danger-color);\n}\n\n.input {\n  --padding: 20px;\n  position: relative;\n  color: var(--text-color);\n}\n.input__placeholder {\n  position: absolute;\n  inset: 50% var(--padding) auto;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 130%;\n  pointer-events: none;\n  transform: translateY(-50%) scale(1);\n  transition: all 200ms ease-in-out;\n  transform-origin: 0 0;\n}\n.input__placeholder span {\n  color: var(--danger-color);\n}\n.input.error .input__placeholder {\n  color: var(--danger-color);\n}\n.input.input.filled .input__placeholder,\n.input input:focus ~ .input__placeholder {\n  transform: translateY(-125%) scale(0.85);\n}\n@media (max-width: 767px) {\n  .input.input.filled .input__placeholder,\n  .input input:focus ~ .input__placeholder {\n    transform: translateY(-115%) scale(0.85);\n  }\n}\n.input__control {\n  background-color: #fff;\n  border: none;\n  box-shadow: none;\n  border-radius: 6px;\n  width: 100%;\n  height: 60px;\n  padding: 18px var(--padding) 0;\n  outline: none;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 130%;\n  transition: box-shadow 200ms ease-in-out;\n}\n.input__control:focus {\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n}\n@media (max-width: 767px) {\n  .input__control {\n    height: 50px;\n  }\n}\n\n.popup-message {\n  position: fixed;\n  z-index: 1100;\n  inset: 0;\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.4);\n  opacity: 0;\n  pointer-events: none;\n}\n.popup-message.visible {\n  opacity: 1;\n  pointer-events: all;\n}\n.popup-message__content {\n  height: max-content;\n  width: fit-content;\n  margin: auto;\n  padding: 20px 20px;\n  background-color: #fff;\n  color: #000;\n  border-radius: 15px;\n  border: 2px;\n  background-color: #fff;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n}\n\n.window-popup {\n  position: fixed;\n  inset: 0;\n  border-radius: 20px;\n  visibility: hidden;\n  opacity: 0;\n  pointer-events: none;\n}\n.window-popup.is-active {\n  visibility: visible;\n  opacity: 1;\n}\n.window-popup.is-animate {\n  pointer-events: all;\n}\n.window-popup__dismiss {\n  position: absolute;\n  z-index: 10;\n  top: 30px;\n  right: 30px;\n}\n@media (max-width: 767px) {\n  .window-popup__dismiss {\n    top: 20px;\n    right: 20px;\n  }\n}\n.window-popup__dialog {\n  overflow: hidden;\n  overflow-y: auto;\n  max-height: 100%;\n  padding-top: 20vh;\n  padding-bottom: 40px;\n}\n@media (max-width: 767px) {\n  .window-popup__dialog {\n    padding-top: 40px;\n  }\n}","@font-face {\n    font-family: 'Mulish';\n    src: url('../fonts/Mulish-Bold.woff2') format('woff2'),\n    url('../fonts/Mulish-Bold.woff') format('woff');\n    font-weight: bold;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Mulish';\n    src: url('../fonts/Mulish-SemiBold.woff2') format('woff2'),\n    url('../fonts/Mulish-SemiBold.woff') format('woff');\n    font-weight: 600;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Mulish';\n    src: url('../fonts/Mulish-Medium.woff2') format('woff2'),\n    url('../fonts/Mulish-Medium.woff') format('woff');\n    font-weight: 500;\n    font-style: normal;\n    font-display: swap;\n}\n\n","[class^=\"icon\"] {\n    display: inline-block;\n    vertical-align: middle;\n    line-height: 1;\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center center;\n}\n\n@if $generate-sprites {\n    [class*=\"s-icon\"] {\n        vertical-align: middle;\n        display: inline-block;\n        line-height: 1;\n\n        &::before {\n            content: \"\";\n            display: block;\n        }\n    }\n\n    @include retina-sprites($retina-groups);\n}","* {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: transparent;\n\n    &,\n    &::before,\n    &::after {\n        box-sizing: border-box;\n    }\n}\n\n@-ms-viewport {\n    width: auto;\n}\n\nhtml,\nbody {\n    -webkit-overflow-scrolling: touch;\n}\n\nhtml {\n    height: 100%;\n    font-size: var(--font-size-base);\n}\n\nbody {\n    display: grid;\n    grid-template-columns: 100%;\n    min-height: 100%;\n    margin: 0;\n    font: 400 1rem/1.5 var(--font-family-default);\n    font-feature-settings: var(--font-feature, normal);\n    font-variant: normal;\n    color: var(--text-color);\n    background-color: var(--white);\n    background-repeat: repeat;\n    background-position: 50% 0;\n    background-size: cover;\n    opacity: 0;\n\n    height: 300vh;\n\n    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    }\n\n    &.load {\n        opacity: 1;\n        transition: opacity 0.6s ease-out 0.3s;\n    }\n}\n\na,\nbutton {\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n}\n\nbutton {\n    -webkit-appearance: none;\n    padding: 0;\n    border: none;\n    background-color: transparent;\n    box-shadow: none;\n    color: inherit;\n}\n\nimg,\nembed,\nvideo {\n    display: inline-block;\n    max-width: 100%;\n    height: auto;\n    line-height: 1;\n    border: none;\n}\n\nsvg {\n    display: inline-block;\n    line-height: 1;\n\n    &:not([fill=\"none\"]) {\n        fill: currentColor;\n    }\n}\n\npicture {\n    flex-grow: 1;\n    border-radius: inherit;\n}\n\n","h1,\n.h1,\nh2,\n.h2,\nh3,\n.h3,\nh4,\n.h4,\nh5,\n.h5 {\n    margin-top: 0;\n    font-family: var(--font-family-secondary);\n}\n\np {\n    margin-bottom: 1.5rem;\n}\n\na {\n    color: inherit;\n    text-decoration: none;\n    transition: var(--t-base);\n\n    &:hover {\n        color: var(--primary-color);\n    }\n}\n\n.link-under {\n    border-bottom: 1px solid transparent;\n\n    &:hover {\n        border-bottom: 1px solid;\n    }\n}\n\nsup,\nsub {\n    position: relative;\n    font-size: inherit;\n}\n\nsup {\n    top: 0;\n}\n\nsub {\n    bottom: 0;\n}\n\nb {\n    font-weight: 700;\n}\n\n.text-center {\n    text-align: center;\n}\n\n.text-overflow {\n    @include textOverflow;\n}\n\n.text-nowrap {\n    white-space: nowrap;\n}\n","// Mixins.\n\n@mixin nl {\n    margin: 0;\n    padding: 0;\n    text-indent: 0;\n    list-style: none;\n    list-style-position: outside;\n}\n\n@mixin cf {\n    &:before,\n    &:after {\n        display: table;\n        content: \"\";\n    }\n\n    &:after {\n        clear: both;\n    }\n\n    .lt-ie8 & {\n        zoom: 1;\n    }\n}\n\n@mixin blocks-justify {\n    text-align: justify;\n    text-justify: newspaper;\n}\n\n// You can add your own mixins here:\n\n@mixin reset-btn-styles {\n    background: none;\n    box-shadow: none;\n    border: 0;\n    outline: none;\n    -webkit-appearance: none;\n}\n\n@mixin textOverflow() {\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n@mixin textEllipsis($rows: 1) {\n    /*! autoprefixer: off */\n    display: -webkit-box;\n    display: -moz-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: $rows;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n@mixin textBackground($color, $bg) {\n    /*! autoprefixer: off */\n    color: $color;\n    background: $bg;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    text-fill-color: transparent;\n}\n\n@mixin bg-cover {\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n@mixin overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n}\n\n@mixin flex-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none;\n}\n\n@mixin flex-100 {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n}\n\n@mixin placeholder($color) {\n    &::placeholder {\n        color: $color;\n    }\n}\n\n@mixin hide-scrollbar {\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n}\n",".page-wrapper {\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n}\n\n.page-content {\n    flex-grow: 1;\n}\n\n.container {\n    width: 100%;\n    max-width: var(--container-width);\n    padding: 0 var(--container-gutter);\n    margin: 0 auto;\n}",".button-popup {\n    position: fixed;\n    right: 15px;\n    bottom: 15px;\n    width: 73px;\n    height: 73px;\n    background-image: linear-gradient(225deg, #0C5EED -52.44%, #292B33 94.43%);\n    border-radius: 50%;\n\n    &__img {\n        width: 68px;\n        position: absolute;\n        inset: -9px 12px 0 0;\n        animation-delay: 0s, 1s;\n        animation: taDa 2s 1s infinite;\n    }\n}\n\n@keyframes taDa {\n    0% {\n        transform: scale3d(1, 1, 1);\n    }\n    10%, 20% {\n        transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);\n    }\n    30%, 50%, 70%, 90% {\n        transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\n    }\n    40%, 60%, 80% {\n        transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\n    }\n    100% {\n        transform: scale3d(1, 1, 1);\n    }\n}\n",".button {\n    border: none;\n    outline: none;\n    background-color: var(--primary-color);\n    color: #fff;\n    border-radius: 6px;\n    padding: 17px 40px;\n    font-size: 15px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 165%;\n    text-transform: uppercase;\n    transition: all 200ms ease-in-out;\n\n    &:active {\n        background-color: var(--primary-color-active);\n    }\n}\n",".subscribe-popup {\n    color: #fff;\n\n    &__fill {\n        position: absolute;\n        right: 15px;\n        bottom: 15px;\n        z-index: 1;\n        width: 73px;\n        height: 73px;\n        border-radius: 100%;\n        background-image: linear-gradient(225deg, #0C5EED -52.44%, #292B33 94.43%);\n        pointer-events: none;\n        transform-origin: 50% 50%;\n        transform: scale(0);\n        transition: transform 0.75s ease-in-out;\n\n        .is-animate & {\n            transform: scale(70);\n\n            @include media('>1920px') {\n                transform: scale(100);\n            }\n        }\n    }\n\n    &__scene {\n        position: absolute;\n        inset: 0;\n        z-index: 2;\n        opacity: 0;\n        pointer-events: none;\n        transition: 200ms ease-in-out 0s;\n        transform: scale(1.3);\n\n        .is-animate & {\n            opacity: 1;\n            transition: 200ms ease-in-out 1s;\n            pointer-events: all;\n            transform: scale(1);\n        }\n    }\n\n    &__parallax {\n        width: 100%;\n        height: 100%;\n    }\n\n    &__parallax-item {\n        height: 100%;\n        width: 100%;\n        background: url('__static__content/Shapes.png') no-repeat 50% 100% / contain;\n    }\n\n    &__content {\n        position: relative;\n        z-index: 3;\n        display: grid;\n        grid-template-columns: 1fr 0.6fr;\n        gap: 48px;\n        opacity: 0;\n        pointer-events: none;\n        transition: 200ms ease-in-out 0s;\n\n        .is-animate & {\n            opacity: 1;\n            transition: 200ms ease-in-out 0.5s;\n            pointer-events: all;\n        }\n\n        @include media ('<sm-tablet') {\n            grid-template-columns: 1fr;\n        }\n    }\n\n    &__left {\n        padding-top: 20px;\n    }\n\n    &__title {\n        font-size: 34px;\n        font-style: normal;\n        font-weight: 600;\n        line-height: 130%;\n\n        @include media ('<sm-tablet') {\n            margin-bottom: 16px;\n            font-size: 18px;\n        }\n    }\n\n    &__text {\n        margin-bottom: 54px;\n    }\n\n    &__features {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-gap: 20px 40px;\n        list-style: none;\n        margin: 0;\n        padding: 0;\n\n        @include media('<sm') {\n            grid-template-columns: 1fr;\n        }\n    }\n\n    &__features-item {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        grid-gap: 20px 30px;\n        align-items: center;\n\n        [class*=icon] {\n            fill: none;\n        }\n\n        p {\n            margin: 0;\n        }\n    }\n\n    &__submit-btn {\n        max-width: 300px;\n        width: 100%;\n\n        @include media ('<sm-tablet') {\n            max-width: 100%;\n        }\n    }\n}\n","//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v2.0.0\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n@charset \"UTF-8\";\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:string';\n@use 'sass:meta';\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n    'screen': 'screen',\n    'print': 'print',\n    'handheld': 'handheld',\n    'landscape': '(orientation: landscape)',\n    'portrait': '(orientation: portrait)',\n    'retina2x':\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n    'retina3x':\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n    'px': 1,\n    'em': 0.01,\n    'rem': 0.1,\n    '': 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n    @if meta.feature-exists('at-error') {\n        @error $message;\n    } @else {\n        @warn $message;\n        $_: noop();\n    }\n\n    @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n    @if im-log($message) {\n    }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n    $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\n\n    @if not $no-media-breakpoint-value {\n        @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\n        }\n    }\n\n    @each $condition in $conditions {\n        @if not map.has-key($media-expressions, $condition) {\n            $operator: get-expression-operator($condition);\n            $prefix: get-expression-prefix($operator);\n            $value: get-expression-value($condition, $operator);\n\n            @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\n            {\n                @return false;\n            }\n        } @else if not list.index($im-no-media-expressions, $condition) {\n            @return false;\n        }\n    }\n\n    @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n    @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n        @if string.index($expression, $operator) {\n            @return $operator;\n        }\n    }\n\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('No operator found in `#{$expression}`.');\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n    $operator-index: string.index($expression, $operator);\n    $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\n    $parsed-dimension: str-trim($parsed-dimension);\n    $dimension: 'width';\n\n    @if string.length($parsed-dimension) > 0 {\n        $dimension: $parsed-dimension;\n    }\n\n    @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n    @return if(list.index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n    $operator-index: string.index($expression, $operator);\n    $value: string.slice($expression, $operator-index + string.length($operator));\n    $trimmedValue: str-trim($value);\n\n    @if map.has-key($breakpoints, $trimmedValue) {\n        $value: map.get($breakpoints, $trimmedValue);\n    } @else {\n        $value: to-number($trimmedValue);\n    }\n\n    $interval: map.get($unit-intervals, math.unit($value));\n\n    @if not $interval {\n        // It is not possible to include a mixin inside a function, so we have to\n        // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n        // functions cannot be called anywhere in Sass, we need to hack the call in\n        // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n        // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n        $_: im-log('Unknown unit `#{math.unit($value)}`.');\n    }\n\n    @if $operator == '>' {\n        $value: $value + $interval;\n    } @else if $operator == '<' {\n        $value: $value - $interval;\n    }\n\n    @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n    // If it is part of $media-expressions, it has no operator\n    // then there is no need to go any further, just return the value\n    @if map.has-key($media-expressions, $expression) {\n        @return map.get($media-expressions, $expression);\n    }\n\n    $operator: get-expression-operator($expression);\n    $dimension: get-expression-dimension($expression, $operator);\n    $prefix: get-expression-prefix($operator);\n    $value: get-expression-value($expression, $operator);\n\n    @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: list.length($list)) {\n    @if list.length($list) < 1 or $start > $end {\n        @return ();\n    }\n\n    $result: ();\n\n    @for $i from $start through $end {\n        $result: list.append($result, list.nth($list, $i), comma);\n    }\n\n    @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n\n@function to-number($value) {\n    @if meta.type-of($value) == 'number' {\n        @return $value;\n    } @else if meta.type-of($value) != 'string' {\n        $_: im-log('Value for `to-number` should be a number or a string.');\n    }\n\n    $first-character: string.slice($value, 1, 1);\n    $result: 0;\n    $digits: 0;\n    $minus: ($first-character == '-');\n    $numbers: (\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9': 9,\n    );\n\n    // Remove +/- sign if present at first character\n    @if ($first-character == '+' or $first-character == '-') {\n        $value: string.slice($value, 2);\n    }\n\n    @for $i from 1 through string.length($value) {\n        $character: string.slice($value, $i, $i);\n\n        @if not(list.index(map.keys($numbers), $character) or $character == '.') {\n            @return to-length(if($minus, -$result, $result), string.slice($value, $i));\n        }\n\n        @if $character == '.' {\n            $digits: 1;\n        } @else if $digits == 0 {\n            $result: $result * 10 + map.get($numbers, $character);\n        } @else {\n            $digits: $digits * 10;\n            $result: $result + math.div(map.get($numbers, $character), $digits);\n        }\n    }\n\n    @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n    $units: (\n        'px': 1px,\n        'cm': 1cm,\n        'mm': 1mm,\n        '%': 1%,\n        'ch': 1ch,\n        'pc': 1pc,\n        'in': 1in,\n        'em': 1em,\n        'rem': 1rem,\n        'pt': 1pt,\n        'ex': 1ex,\n        'vw': 1vw,\n        'vh': 1vh,\n        'vmin': 1vmin,\n        'vmax': 1vmax,\n    );\n\n    @if not list.index(map.keys($units), $unit) {\n        $_: im-log('Invalid unit `#{$unit}`.');\n    }\n\n    @return $value * map.get($units, $unit);\n}\n\n////\n/// String to number converter\n/// @author Jack McNicol\n/// @access private\n////\n\n///\n/// Trims a string of leading and trailing spaces\n///\n/// @param {String} $string - Value to be trimmed\n///\n/// @return {String}\n///\n\n@function str-trim($string) {\n    @if (str-slice($string, 1, 1) == ' ') {\n        @return str-trim(str-slice($string, 2));\n    } @else if (str-slice($string, str-length($string), -1) == ' ') {\n        @return str-trim(str-slice($string, 1, -2));\n    } @else {\n        @return $string;\n    }\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n    // Save global configuration\n    $global-breakpoints: $breakpoints;\n    $global-media-expressions: $media-expressions;\n\n    // Update global configuration\n    $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\n    $media-expressions: map.merge($media-expressions, $tweak-media-expressions) !global;\n\n    @content;\n\n    // Restore global configuration\n    $breakpoints: $global-breakpoints !global;\n    $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n    @if ($im-media-support and list.length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n    {\n        @content;\n    } @else if ($im-media-support and list.length($conditions) > 0) {\n        @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\n            // Recursive call\n            $sliced-conditions: slice($conditions, 2);\n            @include media($sliced-conditions...) {\n                @content;\n            }\n        }\n    }\n}\n",".checkbox {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: flex-start;\n    grid-gap: 10px;\n    margin-bottom: 30px;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 130%;\n\n    input {\n        pointer-events: none;\n    }\n\n    a {\n        color: #00ADFE;\n        text-decoration: underline;\n    }\n\n    .input-helper {\n        display: none;\n        grid-column: 2;\n    }\n\n    &.error .input-helper {\n        display: block;\n    }\n}\n","%input {\n    -webkit-appearance: none;\n    border: none;\n    border-radius: 0;\n    box-shadow: none;\n    outline: none;\n    background-color: transparent;\n}\n\n%input-placeholder {\n    font-weight: 400;\n}\n\nfieldset {\n    padding: 0;\n    margin: 0;\n    border: none;\n}\n\ninput {\n    &[type=\"text\"] {\n        -webkit-appearance: none;\n    }\n\n    &[type=\"search\"] {\n        box-sizing: border-box;\n        border-radius: 0;\n    }\n}\n\n.input {\n    -webkit-appearance: none;\n    display: block;\n    width: 100%;\n    outline: none;\n\n    &::placeholder {\n        color: var(--gray);\n    }\n}\n\ntextarea {\n    resize: none;\n\n    &.input {\n        height: auto;\n    }\n}\n\n.form-group {\n    margin-bottom: 16px;\n}\n\n.input-helper {\n    .error & {\n        color: var(--danger-color);\n    }\n}\n",".input {\n    --padding: 20px;\n    position: relative;\n    color: var(--text-color);\n\n    &__placeholder {\n        position: absolute;\n        inset: 50% var(--padding) auto;\n        font-size: 16px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: 130%;\n        pointer-events: none;\n        transform: translateY(-50%) scale(1);\n        transition: all 200ms ease-in-out;\n        transform-origin: 0 0;\n\n        span {\n            color: var(--danger-color);\n        }\n\n        .input.error & {\n            color: var(--danger-color);\n        }\n    }\n\n    &.input.filled,\n    input:focus ~ {\n        .input__placeholder {\n            transform: translateY(-125%) scale(0.85);\n\n            @include media ('<sm-tablet') {\n                transform: translateY(-115%) scale(0.85);\n            }\n        }\n    }\n\n    &__control {\n        background-color: #fff;\n        border: none;\n        box-shadow: none;\n        border-radius: 6px;\n        width: 100%;\n        height: 60px;\n        padding: 18px var(--padding) 0;\n        outline: none;\n        font-size: 16px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: 130%;\n        transition: box-shadow 200ms ease-in-out;\n\n        &:focus {\n            box-shadow: 0 0 10px rgba(0,0,0, 0.30);\n        }\n\n        @include media ('<sm-tablet') {\n            height: 50px;\n        }\n    }\n}\n",".popup-message {\n    position: fixed;\n    z-index: 1100;\n    inset: 0;\n    display: flex;\n    background-color: rgba(0,0,0, 0.40);\n    opacity: 0;\n    pointer-events: none;\n\n    &.visible {\n        opacity: 1;\n        pointer-events: all;\n    }\n\n    &__content {\n        height: max-content;\n        width: fit-content;\n        margin: auto;\n        padding: 20px 20px;\n        background-color: #fff;\n        color: #000;\n        border-radius: 15px;\n        border: 2px;\n        background-color: #fff;\n        box-shadow: 0 0 20px rgba(0,0,0, 0.20);\n    }\n}\n",".window-popup {\n    position: fixed;\n    inset: 0;\n    border-radius: 20px;\n    visibility: hidden;\n    opacity: 0;\n    pointer-events: none;\n\n    &.is-active {\n        visibility: visible;\n        opacity: 1;\n    }\n\n    &.is-animate {\n        pointer-events: all;\n    }\n\n    &__dismiss {\n        position: absolute;\n        z-index: 10;\n        top: 30px;\n        right: 30px;\n\n        @include media ('<sm-tablet') {\n            top: 20px;\n            right: 20px;\n        }\n    }\n\n    &__dialog {\n        overflow: hidden;\n        overflow-y: auto;\n        max-height: 100%;\n        padding-top: 20vh;\n        padding-bottom: 40px;\n\n        @include media ('<sm-tablet') {\n            padding-top: 40px;\n        }\n    }\n}\n"]}